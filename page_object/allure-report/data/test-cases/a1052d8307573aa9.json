{
  "uid" : "a1052d8307573aa9",
  "name" : "test_searchcase_001_001",
  "fullName" : "testcase.baidu_search_001.test_search_001.Test_Search_001#test_searchcase_001_001",
  "historyId" : "f3d70fb877bbb348fd4e17c8c1998a14",
  "time" : {
    "start" : 1605168890203,
    "stop" : 1605168911454,
    "duration" : 21251
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = <bound method BasePage.isElementPresent of <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>>(('xpath', \"//*[contains(text(),'MeterSphere - 开源自动化测试平台')]\"))\n +    where <bound method BasePage.isElementPresent of <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>> = <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>.isElementPresent",
  "statusTrace" : "self = <page_object.testcase.baidu_search_001.test_search_001.Test_Search_001 object at 0x00000185FDE637B8>\ndriver = <airtest_selenium.proxy.WebChrome (session=\"cf255c1e6d558149ebd1f401899f3fbc\")>\n\n    @allure.story('test_searchcase_001_001')\n    def test_searchcase_001_001(self,driver):\n        self.driver = driver\n        self.main = MainPage(self.driver)\n        self.main.open_baidu().search(\"selenium\").hover_p()\n    \n        assert_text = BasePage(self.driver)\n        text = (By.XPATH,\"//*[contains(text(),'MeterSphere - 开源自动化测试平台')]\")\n>       assert assert_text.isElementPresent(text) == True\nE       assert False == True\nE        +  where False = <bound method BasePage.isElementPresent of <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>>(('xpath', \"//*[contains(text(),'MeterSphere - 开源自动化测试平台')]\"))\nE        +    where <bound method BasePage.isElementPresent of <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>> = <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>.isElementPresent\n\nbaidu_search_001\\test_search_001.py:20: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1605168886718,
      "stop" : 1605168890202,
      "duration" : 3484
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = <bound method BasePage.isElementPresent of <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>>(('xpath', \"//*[contains(text(),'MeterSphere - 开源自动化测试平台')]\"))\n +    where <bound method BasePage.isElementPresent of <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>> = <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>.isElementPresent",
    "statusTrace" : "self = <page_object.testcase.baidu_search_001.test_search_001.Test_Search_001 object at 0x00000185FDE637B8>\ndriver = <airtest_selenium.proxy.WebChrome (session=\"cf255c1e6d558149ebd1f401899f3fbc\")>\n\n    @allure.story('test_searchcase_001_001')\n    def test_searchcase_001_001(self,driver):\n        self.driver = driver\n        self.main = MainPage(self.driver)\n        self.main.open_baidu().search(\"selenium\").hover_p()\n    \n        assert_text = BasePage(self.driver)\n        text = (By.XPATH,\"//*[contains(text(),'MeterSphere - 开源自动化测试平台')]\")\n>       assert assert_text.isElementPresent(text) == True\nE       assert False == True\nE        +  where False = <bound method BasePage.isElementPresent of <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>>(('xpath', \"//*[contains(text(),'MeterSphere - 开源自动化测试平台')]\"))\nE        +    where <bound method BasePage.isElementPresent of <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>> = <page_object.pages.BasePage.BasePage object at 0x00000185FDEA4630>.isElementPresent\n\nbaidu_search_001\\test_search_001.py:20: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5c72d9fbb85b9ed7",
      "name" : "失败截图",
      "source" : "5c72d9fbb85b9ed7.jpg",
      "type" : "image/jpg",
      "size" : 265502
    }, {
      "uid" : "ec6eb9e6a9efad9f",
      "name" : "log",
      "source" : "ec6eb9e6a9efad9f.txt",
      "type" : "text/plain",
      "size" : 195648
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Test_Search_001"
  }, {
    "name" : "story",
    "value" : "test_searchcase_001_001"
  }, {
    "name" : "parentSuite",
    "value" : "testcase.baidu_search_001"
  }, {
    "name" : "suite",
    "value" : "test_search_001"
  }, {
    "name" : "subSuite",
    "value" : "Test_Search_001"
  }, {
    "name" : "host",
    "value" : "NIT00104370"
  }, {
    "name" : "thread",
    "value" : "45604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.baidu_search_001.test_search_001"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a1052d8307573aa9.json",
  "parameterValues" : [ ]
}